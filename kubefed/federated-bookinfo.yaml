##################################################################################################
# Details service
##################################################################################################
apiVersion: types.kubefed.io/v1beta1
kind: FederatedNamespace
metadata:
  name: default
  namespace: default
spec:
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
---
apiVersion: types.kubefed.io/v1beta1
kind: FederatedService
metadata:
  name: details
  namespace: default
spec:
  template:
    metadata:
      name: details
      labels:
        app: details
        service: details
    spec:
      ports:
      - port: 9080
        name: http
      selector:
        app: details
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
---
apiVersion: types.kubefed.io/v1beta1
kind: FederatedServiceAccount
metadata:
  name: bookinfo-details
  namespace: default
spec:
  template:
    metadata:
      name: bookinfo-details
    spec:
      labels:
        account: details
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
---
apiVersion: types.kubefed.io/v1beta1
kind: FederatedDeployment
metadata:
  name: details-v1
  namespace: default
spec:
  template:
    metadata:
      name: details
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: details
          version: v1
      template:
        metadata:
          labels:
            app: details
            version: v1
        spec:
          serviceAccountName: bookinfo-details
          containers:
          - name: details
            image: docker.io/istio/examples-bookinfo-details-v1:1.16.2
            imagePullPolicy: IfNotPresent
            ports:
            - containerPort: 9080
            securityContext:
              runAsUser: 1000
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
---
##################################################################################################
# Ratings service
##################################################################################################
apiVersion: types.kubefed.io/v1beta1
kind: FederatedService
metadata:
  name: ratings
  namespace: default
spec:
  template:
    metadata:
      name: ratings
      labels:
        app: ratings
        service: ratings
    spec:
      ports:
      - port: 9080
        name: http
      selector:
        app: ratings
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
---
apiVersion: types.kubefed.io/v1beta1
kind: FederatedServiceAccount
metadata:
  name: bookinfo-ratings
  namespace: default
spec:
  template:
    metadata:
      name: bookinfo-ratings
    spec:
      labels:
        account: ratings
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
---
apiVersion: types.kubefed.io/v1beta1
kind: FederatedDeployment
metadata:
  name: ratings-v1
  namespace: default
spec:
  template:
    metadata:
      name: ratings
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: ratings
          version: v1
      template:
        metadata:
          labels:
            app: ratings
            version: v1
        spec:
          serviceAccountName: bookinfo-ratings
          containers:
          - name: ratings
            image: docker.io/istio/examples-bookinfo-ratings-v1:1.16.2
            imagePullPolicy: IfNotPresent
            ports:
            - containerPort: 9080
            securityContext:
              runAsUser: 1000
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
---
##################################################################################################
# Reviews service
##################################################################################################
apiVersion: types.kubefed.io/v1beta1
kind: FederatedService
metadata:
  name: reviews
  namespace: default
spec:
  template:
    metadata:
      name: reviews
      labels:
        app: reviews
        service: reviews
    spec:
      ports:
      - port: 9080
        name: http
      selector:
        app: reviews
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
---
apiVersion: types.kubefed.io/v1beta1
kind: FederatedServiceAccount
metadata:
  name: bookinfo-reviews
  namespace: default
spec:
  template:
    metadata:
      name: bookinfo-reviews
    spec:
      labels:
        account: reviews
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
---
apiVersion: types.kubefed.io/v1beta1
kind: FederatedDeployment
metadata:
  name: reviews-v1
  namespace: default
spec:
  template:
    metadata:
      name: reviews-v1
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: reviews
          version: v1
      template:
        metadata:
          labels:
            app: reviews
            version: v1
        spec:
          serviceAccountName: bookinfo-reviews
          containers:
          - name: reviews
            image: docker.io/istio/examples-bookinfo-reviews-v1:1.16.2
            imagePullPolicy: IfNotPresent
            env:
            - name: LOG_DIR
              value: "/tmp/logs"
            ports:
            - containerPort: 9080
            volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: wlp-output
              mountPath: /opt/ibm/wlp/output
            securityContext:
              runAsUser: 1000
          volumes:
          - name: wlp-output
            emptyDir: {}
          - name: tmp
            emptyDir: {}
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
---
apiVersion: types.kubefed.io/v1beta1
kind: FederatedDeployment
metadata:
  name: reviews-v2
  namespace: default
spec:
  template:
    metadata:
      name: reviews-v2
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: reviews
          version: v2
      template:
        metadata:
          labels:
            app: reviews
            version: v2
        spec:
          serviceAccountName: bookinfo-reviews
          containers:
          - name: reviews
            image: docker.io/istio/examples-bookinfo-reviews-v2:1.16.2
            imagePullPolicy: IfNotPresent
            env:
            - name: LOG_DIR
              value: "/tmp/logs"
            ports:
            - containerPort: 9080
            volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: wlp-output
              mountPath: /opt/ibm/wlp/output
            securityContext:
              runAsUser: 1000
          volumes:
          - name: wlp-output
            emptyDir: {}
          - name: tmp
            emptyDir: {}
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
---
apiVersion: types.kubefed.io/v1beta1
kind: FederatedDeployment
metadata:
  name: reviews-v3
  namespace: default
spec:
  template:
    metadata:
      name: reviews-v3
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: reviews
          version: v3
      template:
        metadata:
          labels:
            app: reviews
            version: v3
        spec:
          serviceAccountName: bookinfo-reviews
          containers:
          - name: reviews
            image: docker.io/istio/examples-bookinfo-reviews-v3:1.16.2
            imagePullPolicy: IfNotPresent
            env:
            - name: LOG_DIR
              value: "/tmp/logs"
            ports:
            - containerPort: 9080
            volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: wlp-output
              mountPath: /opt/ibm/wlp/output
            securityContext:
              runAsUser: 1000
          volumes:
          - name: wlp-output
            emptyDir: {}
          - name: tmp
            emptyDir: {}
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
---
##################################################################################################
# Productpage services
##################################################################################################
apiVersion: types.kubefed.io/v1beta1
kind: FederatedService
metadata:
  name: productpage
  namespace: default
spec:
  template:
    name: productpage
    labels:
      app: productpage
      service: productpage
    spec:
      ports:
      - port: 9080
        name: http
      selector:
        app: productpage
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
---
apiVersion: types.kubefed.io/v1beta1
kind: FederatedDeployment
metadata:
  name: productpage-v1
  namespace: default
spec:
  template:
    metadata:
      name: productpage
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: productpage
          version: v1
      template:
        metadata:
          labels:
            app: productpage
            version: v1
        spec:
          serviceAccountName: bookinfo-productpage
          containers:
          - name: productpage
            image: docker.io/istio/examples-bookinfo-productpage-v1:1.16.2
            imagePullPolicy: IfNotPresent
            ports:
            - containerPort: 9080
            volumeMounts:
            - name: tmp
              mountPath: /tmp
            securityContext:
              runAsUser: 1000
          volumes:
          - name: tmp
            emptyDir: {}
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
---
