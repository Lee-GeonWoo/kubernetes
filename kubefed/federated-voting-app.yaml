apiVersion: types.kubefed.io/v1beta1
kind: FederatedNamespace
metadata:
  name: demo
  namespace: demo
spec:
  template:
    metadata:
      labels:
        istio-injection: enabled
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
    - name: cluster3
---

# redis
apiVersion: types.kubefed.io/v1beta1
kind: FederatedService
metadata: 
  labels: 
    app: redis
  name: redis
  namespace: demo
spec:
  template:
    metadata:
      name: redis
      labels:
        app: redis
    spec:
      ports:
      - name: redis-service
        port: 6379
        targetPort: 6379
      selector: 
        app: redis
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
    - name: cluster3
---
apiVersion: types.kubefed.io/v1beta1
kind: FederatedDeployment
metadata:
  name: redis
  namespace: demo
  labels:
    app: redis
spec:
  template:
    metadata:
      labels:
        app: redis
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: redis
      template:
        metadata:
          labels:
            app: redis
        spec:   
          containers:
          - name: redis
            image: redis:alpine
            ports:
            - containerPort: 6379
              name: redis
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
    - name: cluster3

# db
--- 
apiVersion: types.kubefed.io/v1beta1
kind: FederatedService
metadata: 
  labels: 
    app: db
  name: db
  namespace: demo
spec:
  template:
    metadata:
      labels:
        app: db
      name: db
    spec:
      ports: 
      - name: db
        port: 5432
        targetPort: 5432
      selector: 
        app: db
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
    - name: cluster3
---
apiVersion: types.kubefed.io/v1beta1
kind: FederatedDeployment
metadata:
  name: db
  namespace: demo
  labels:
    app: db
spec:
  template:
    metadata:
      labels:
        app: db
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: db
      template:    
        metadata:
          labels:
            app: db
        spec:      
          containers:
          - name: db
            image: postgres:9.4
            env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
            ports:
            - containerPort: 5432
              name: db
            volumeMounts:
            - name: db-data
              mountPath: /var/lib/postgresql/data
          volumes:
          - name: db-data
            persistentVolumeClaim:
              claimName: postgres-pv-claim
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
    - name: cluster3
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
  namespace: demo
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

# result
---
apiVersion: types.kubefed.io/v1beta1
kind: FederatedService
metadata:
  name: result
  namespace: demo
  labels:
    app: result
spec:
  template:
    name: result
    labels:
      app: result
    spec:
      type: NodePort
      ports:
      - port: 5001
        targetPort: 80
        name: result-service
      selector:
        app: result
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
    - name: cluster3
---
apiVersion: types.kubefed.io/v1beta1
kind: FederatedDeployment
metadata:
  name: result
  namespace: demo
  labels:
    app: result
spec:
  template:
    metadata:
      name: result
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: result
      template:
        metadata:
          labels:
            app: result
        spec:
          containers:
          - name: result
            image: dockersamples/examplevotingapp_result:before
            ports:
            - containerPort: 80
              name: result
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
    - name: cluster3

# vote
---
apiVersion: types.kubefed.io/v1beta1
kind: FederatedService
metadata:
  name: vote
  namespace: demo
  labels:
    apps: vote
spec:
  template:
    name: vote
    labels:
      apps: vote
    spec:
      type: NodePort
      ports:
        - port: 5000
          targetPort: 80
          name: vote-service
      selector:
        app: vote
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
    - name: cluster3
---
apiVersion: types.kubefed.io/v1beta1
kind: FederatedDeployment
metadata:
  name: vote
  namespace: demo
  labels:
    app: vote
spec:
  template:
    metadata:
      name: vote
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: vote
      template:
        metadata:
          labels:
            app: vote
        spec:
          containers:
          - name: vote
            image: dockersamples/examplevotingapp_vote:before
            ports:
            - containerPort: 80
              name: vote
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
    - name: cluster3

# worker
--- 
apiVersion: types.kubefed.io/v1beta1
kind: FederatedService
metadata: 
  labels: 
    apps: worker
  name: worker
  namespace: demo
spec:
  template:
    name: worker
    labels:
      apps: worker
    spec:
      clusterIP: None
      selector: 
        app: worker
  placement:
    clusters:
    - name: cluster1
    - name: cluster2
    - name: cluster3
--- 
apiVersion: types.kubefed.io/v1beta1
kind: FederatedDeployment
metadata: 
  labels: 
    app: worker
  name: worker
  namespace: demo
spec:
  template:
    metadata:
      name: worker
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: worker
      template: 
        metadata: 
          labels: 
            app: worker
        spec: 
          containers: 
          - image: dockersamples/examplevotingapp_worker
            name: worker
